/**  Space Invaders in Jack
*  Code design inspired by Nand2Tetris Pong implementation
*/

class SpaceInvadersGame {
    
    static SpaceInvadersGame instance;
    field Ship ship;
    field Shots shots;
    field boolean exit;
    field int score;
    field Enemy enemy;
    

    constructor SpaceInvadersGame new() {
        do Screen.clearScreen();
        let ship = Ship.new();
        let enemy = Enemy.new();
        let shots = Shots.new();
        return this;
    }

    method void dispose() {
        // do ship.dispose();
        // do enemy.dispose();
        do Memory.deAlloc(this);
        return;
    }

    function SpaceInvadersGame getInstance() {
        return instance;
    }

    function void newInstance() {
        let instance = SpaceInvadersGame.new();
        return;
    }

    function void fireShot() {
        do shots.addShot(ship.getGunX(), ship.getGunY());
        return;
    }

    function boolean checkForHit() {
        var int shotX, shotY;
        do shots.start();
        while (shots.hasNext()) {
            let shotX = shots.nextShotX();
            let shotY = shots.nextShotY();
            if (enemy.handleShot(shotX, shotY)) {
                return true;
            }
        }
        return false;
    }
    method void oneMove() {
        do ship.move();
        do enemy.move();
        do shots.move();
        /** if (checkForHit()) {
            let score = score + 1;
        } */
        do Sys.wait(50);
        return Keyboard.keyPressed();
    }
    method void run() {
        var char key;

        while (~exit) {
            while ((key = 0) & (~exit)) {
                let key = oneMove();
            }

            if (key = 130) { 
                do ship.setDirection(1);
            } else {
               if (key = 132) {
                   do ship.setDirection(2);
               } else {
                   if (key = 131) {
                       do fireShot();
                   } else {
                       if (key = 133) {
                           do ship.setDirection(0);
                       }
                   }

                   if (key = 140) {
                       let exit = true;
                   }
               }
            }

            while ((~(key = 0)) & (~exit)) {
                let key = oneMove();
            }
        }
        if (exit) {
            do Output.moveCursor(10, 27);
            do Output.printString("Game Over");
        }
        return;
        }
    }
}